
####data options and feature extraction options
#Only one of the following three inputs are used each run. The priority goes like this: predicted > problem > instances > input.
#This is done to save time when similar data is used and only some parameters change.
data.input=.../inputdata
#Instances is just a bag of words
data.instances=
#Problem contains feature vectors and categories vectors. Everything that is needed to run SVM.
data.problem=
##The same level of input should be provided for the test set as well!
data.model=
data.test.input=/home/sotos/Desktop/semester_project/semester_project_old_folder/data/data_used/testData2
data.test.instances=
data.test.problem=
#Extracts statistics from predicted values file
data.predictionsFile=

#Possible values for model are 1) bow 2) brown 3) word2vec
data.model=word2vec

#remember that instances contain the alphabet
data.saveInstances=false
data.saveProblem=false
data.removeStopwords=false


####Model Parameters -------------------------------

clf.type=svm
clf.svm.type=C
clf.svm.kernel=linear
clf.svm.C=10410.80468

w2v.lookupTable=
w2v.learningRate=0.07066
w2v.minLearningRate=0.000001
w2v.batchSize=1540
w2v.epochs=5
w2v.trainWordVectors=false
w2v.layerSize=697
w2v.windowSize=38
w2v.subSampling=0.00005
w2v.plus_bow=true

#legal options are binary and count
bow.type=binary

##You can specify the task of the classifier. It can be either crossValidation, train a model and predict.
##Only one of them cana be completed each time. If more that one is true the priority is crossValidation > train-predict
#use cross validation for experiments
clf.crossValidation=true
clf.crossValidation.folds=10
#should be both false or both true
clf.train=false
clf.predict=false
clf.predict.model=

####output
general.outputDir=...outputDir/
